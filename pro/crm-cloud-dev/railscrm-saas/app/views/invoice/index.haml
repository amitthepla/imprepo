:css
  .width-45{
    width:45%
  }
  .width-50{
    width:50%
  }
  textarea {
    resize: none;
  }
  .bfh-selectbox-toggle{border:none;border-bottom:1px solid rgb(179, 179, 179);}
  .height_30{height:30px !important;}
  .mt_55{margin-top:55px}
= stylesheet_link_tag   "bootstrap-formhelpers", :media => "all"
= stylesheet_link_tag   "bootstrap-formhelpers.min", :media => "all"


/= javascript_include_tag "bootstrap-formhelpers-currencies"
= javascript_include_tag "bootstrap-formhelpers"
= javascript_include_tag "bootstrap-formhelpers.min"


.container
  .white-sticky-header.fixed-in-app-header{style: "padding-top: 22px;padding-left: 33px;"}
    .fl  
      %span{style: "margin-top:5px"}  
        %span.navigation_sec
          %a{href: "/leads"}
            Leads
          ="/"
        %span.curr_page_name
          Create Invoice
    .fr
      %span.navigation_sec
        %a{href: "/manage_invoice"}
          Manage Invoice
    .cb
  %div.cstm-material-modal
    .col-md-12
      /%h1{style: "text-align: center"}
      /  Create Invoice
      .invoice_create.well{style: "font-size: 16px;margin: 30px auto;padding: 40px"}
        = nested_form_for(@invoice, :url => '/create_invoice', :html=>{:class => "form bs-docs-example"}) do |f|
          .col-md-2
            .change_logo{style: "height:100px;width:100px;border:1px solid #ccc;"}
              = f.file_field :image,:class=> "col-md-12 form-control", :style => "height: 100%;position: relative;display:none;"
              - if @pre_invoice.present? && @pre_invoice.logo_url.present?
                - sty = "background: gray none repeat scroll 0 0; color: #fff; cursor: pointer; font-size: 12px;display:block;margin-top: 57%;position: absolute;top: 0;"
                = image_tag @pre_invoice.logo_url, :id=>"previewlogo"
              - else
                - sty = "background: gray none repeat scroll 0 0; color: #fff; cursor: pointer; font-size: 12px;display:none;margin-top: 57%;position: absolute;top: 0;"
                = image_tag "/assets/new-ui/default-invoice-logo.png", :id=>"previewlogo", :style => "cursor:pointer;"
              %img#preview_img{:src => "#", :height => "98px", :width => "98px", :style =>"display:none;"}/
              %span#preview_change_logo{:style => sty}
                Click to Change
          .col-md-10
            .bill_from
              Billing From
            %br
            .col-md-6.padlft
              .form-group
                = f.text_field  :company_name, :value => @current_organization.name, :required => true,:class => "height_30", :maxlength => 60
                %label.control-label{:for => "input"} Company Name
                %i.bar
                #company_name_error{:style=>"display:block;font-size:11px; color:#FF0000"}
            .col-md-6  
              .form-group
                = f.text_area  :company_address, :rows => "3", :columns => "10", :value => @current_organization.get_location, :required => true,:class => "height_30"
                %label.control-label{:for => "input"} Company Address
                %i.bar
                #company_address_error{:style=>"display:block;font-size:11px; color:#FF0000"}
            .cb
          .cb
          .mt_55
            .col-md-4
              .form-group
                =text_field_tag :bill_to,"",:class=>"typeahead custom-frm-inner",:onkeyup=>"return onlycharacters(event)",:onkeydown=>"return onlycharacters(event)", "data-provide"=> "typeahead" , :autocomplete=>"off", :required => true
                %label.control-label{:for => "input"} Bill To
                %i.bar
                #bill_to_error{:style=>"display:block;font-size:11px; color:#FF0000"}
                =f.hidden_field :contact_id
                =f.hidden_field :contact_type
            .col-md-8
              .bill_to_details
            .cb
          .mt_55  
            .col-md-4
              .form-group
                = f.text_field  :cc_mail_id, :class => "custom-frm-inner"
                %label.control-label{:for => "input"} CC
                %i.bar
            .col-md-4    
              .form-group
                = f.text_field  :due_date, :required => true, :onkeydown=>"disable_text(event);"
                %label.control-label{:for => "input"} Due Date
                %i.bar
                #due_date_error{:style=>"display:block;font-size:11px; color:#FF0000"}
            .col-md-4
              .form-group
                /- invoice_number = "200000" + "#{@current_organization.invoices.count + 1}"
                = f.text_field  :invoice_no, :required => true, title: "Invoice Number", :maxlength => 30, :onblur =>"check_uniqueness(this.value)"
                %label.control-label{:for => "input"} Invoice Number
                %i.bar
                #invoice_no_error{:style=>"display:block;font-size:11px; color:#FF0000"}
            .cb
          .mt_55
            .col-md-4  
              .form-group
                = f.text_area :notes, :onblur =>"this.value = jQuery.trim((this.value).replace(/^\s*/g,''))",:class => "height_30"
                %label.control-label{:for => "input"} Add a Note
                %i.bar
            .col-md-4
              .form-group
                = f.text_area :terms_and_condition, :onblur =>"this.value = jQuery.trim((this.value).replace(/^\s*/g,''))",:class => "height_30"
                %label.control-label{:for => "input"} Terms & Conditions
                %i.bar
            .cb
          .mt_55
            - i = 0
            = f.fields_for :invoice_items do |task_form|              
              %div{:style => "margin-top:20px;"}
                .col-md-6.form-group
                  = task_form.text_area :description, :onblur =>"this.value = jQuery.trim((this.value).replace(/^\s*/g,''))", :rows => 3, :columns => 10,:class => "height_30"
                  %label.control-label{:for => "input"} Description
                  %i.bar
                .col-md-2.form-group
                  = task_form.text_field :qty, :size => 10,:class => "quantity height_30",:onkeydown=>"return numbersonly(event)", :oninput => "sum_quantity($(this).val(),$(this))"
                  %label.control-label{:for => "input"} Quantity
                  %i.bar
                .col-md-2.form-group
                  = task_form.text_field :rate, :size => 10,:class => "rate height_30", :oninput => "sum_rate($(this).val(),$(this))", :onblur => "return onlyfloatnumbers(event,$(this));sum_rate($(this).val(),$(this));"
                  %label.control-label{:for => "input"} Rate
                  %i.bar
                .col-md-2.form-group{:style => "top:0;margin-top:-20px"}
                  = task_form.hidden_field :amount,:class => "hidden_amount"
                  %span.display_sum.amount{:style => "position:absolute;margin-top:25px;"}
                  %label.control-label{:for => "input"} Total
                  %i.bars
                  /- if i != 0
                  = link_to "javascript:void(0)", :onclick => "remove_items($(this))" do
                    %span.glyphicon.glyphicon-trash.fr{:style => "top:0;margin-top:25px;"}
                  - i+=1
                .cb
            = f.link_to_add "Add another bill", :invoice_items
            /= link_to 'Add another bill', "javascript:void(0)"
          .cb
          .form-group.fr.width-24
            .fl
              Subtotal:
            .fl{:style => "margin-left:20px;"}
              #sub_total
            .cb
          .cb
          .form-group.fr.width-24
            .col-md-6  
              = f.text_field  :tax, title: "Tax",:class => "tax", :oninput => "sum_tax($(this).val(),$(this))", :onblur => "return onlyfloatnumbers(event,$(this));"
              %label.control-label{:for => "input"} Tax(%)
              %i.bar
            .col-md-2
              .tax_amount
            .cb
          .cb
          .fr.width-50
            .col-md-8
              %strong
                Total Amount Payable : 
                %span.total_amount
                  $ 0.00
          .cb
          %div
            = f.submit "Send Invoice", :class=>"btn btn-primary btn-success", disable_with: "Sending...", :id => "submit_invoice", onclick: "return validate_form();"
            = link_to 'Cancel', "/manage_invoice", :class => "btn btn-default" 
    
:javascript
  $( ".custom-frm-inner" ).click(function() {
    $(this).parent().next('.control-label').addClass("control-lbl-add-left")
  });
  $( ".custom-frm-inner" ).focusout(function() {
    if($(this).val() == ""){
      $(this).parent().next('.control-label').removeClass("control-lbl-add-left")
    }else{
      $(this).parent().next('.control-label').addClass("control-lbl-add-txt")
    }
  });
  $('input,textarea').keypress(function() {
    $('.do_not_allow').hide();
  });
  
  $("#bill_to").keypress(function() {
  $('#bill_to').addClass('loadinggif');
   setTimeout(hideloader, 510);
  });

  function hideloader()
  {
   $('#bill_to').removeClass('loadinggif');
  }
  $("#bill_to").keyup(function() {
   $("#contact_type").val($('#bill_to').val());
  });

  $('#bill_to.typeahead').typeahead([{
    name: 'contacts',
    minLength: 0,
    limit: 500,
    valueKey: 'name',
    remote: {url: '/get_contacts/'+ #{current_user.organization.id if current_user.organization.present?}+ '?q=%QUERY&type=invoice'},
    template: "<p style='word-wrap: break-word;'><strong>{{name}}</strong> - {{email}}</p>",
    engine: Hogan
    }]).on('typeahead:selected',onSelected).on('typeahead:opened',onOpened);
  function onSelected($e,datum){
    $("#invoice_contact_type").val(datum.contact_type);
    $("#invoice_contact_id").val(datum.id);
    
    cont_type = $("#invoice_contact_type").val();
    cont_id = $("#invoice_contact_id").val();
    $("#task_loader,.fixed_loader").show();
    $.ajax({
      url: 'get_bill_to_details',
        type: 'POST',
        data: {cont_id: cont_id, cont_type: cont_type},
        success: function(res) {
            $(".bill_to_details").html(res);
            $("#task_loader,.fixed_loader").hide();
        },
        error: function(res) {
          $("#task_loader,.fixed_loader").hide();
          alert("Unable to load contact details.");
        }
    }); 
   
  }
  function onOpened($e){
  $("#deal_contact_id").val("")
  console.log('Opned');
  }
  $(function () {
    var date = new Date();
    var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());
    $('#invoice_due_date').datetimepicker({
      format: 'DD/MM/YYYY',
      autoclose: true,
      minDate: date,
      pickTime: false,
    }).on("dp.change", function (e) {
      $('#due_date_error').html('');
    });
  });
  
  $("#bill_to").keyup(function() {
    $("#invoice_contact_id").val("");
    $("#invoice_contact_type").val("");
    $(".bill_to_details").html("");
  });

  function sum_rate(val,n){
    var qty_val = n.parents(".fields").find(".quantity").val();
    var qty = parseInt(qty_val);
    var rate = parseFloat(val);
    var tax_amount = parseFloat($("#invoice_tax").val());

    var sum_amt =  qty * rate ;
    
    if(!isNaN(sum_amt)){
      n.parents(".fields").find(".amount").text(sum_amt.toFixed(2));
      n.parents(".fields").find(".hidden_amount").val(sum_amt.toFixed(2));
    }else{
      n.parents(".fields").find(".amount").text("");
      n.parents(".fields").find(".hidden_amount").val("");
    }

    var total_amount = parseFloat(0.0);
    $(".amount").each(function() {
      if(!isNaN($(this).text()) && $(this).text() != ""){
        total_amount = parseFloat($(this).text()) + total_amount;
      }else{
        total_amount = total_amount
      }
    });
    if(!isNaN(total_amount)){
      $("#sub_total").html(total_amount.toFixed(2));
    }
    amount_payable(total_amount,tax_amount)
  };

  function sum_quantity(val,n){
    var qty = parseInt(val);
    var rate_val = n.parents(".fields").find(".rate").val();
    var rate = parseFloat(rate_val);    
    var tax_amount = parseFloat($("#invoice_tax").val());

    var sum_amt =  qty * rate ;
    if(!isNaN(sum_amt)){
      n.parents(".fields").find(".amount").text(sum_amt.toFixed(2));
      n.parents(".fields").find(".hidden_amount").val(sum_amt.toFixed(2));
    }else{
      n.parents(".fields").find(".amount").text("");
      n.parents(".fields").find(".hidden_amount").val("");
    }

    var total_amount = parseFloat(0.0);
    $(".amount").each(function() {
      if(!isNaN($(this).text()) && $(this).text() != ""){
        total_amount = parseFloat($(this).text()) + total_amount;
      }else{
        total_amount = total_amount
      }
    });
    if(!isNaN(total_amount)){
      $("#sub_total").html(total_amount.toFixed(2));
    }
    amount_payable(total_amount,tax_amount)
  };

  function sum_tax(val,n){
    var tax_amount = parseFloat(val);
    var total_amount = $("#sub_total").text();
    if(!isNaN(tax_amount) && tax_amount != ""){
      var tax = (parseFloat(total_amount) / 100) * parseFloat(tax_amount) ;
      $(".tax_amount").html(tax_amount.toFixed(2));
    }else{
      $(".tax_amount").html("");
    }
    
    amount_payable(total_amount,tax_amount)
  };
  
  function amount_payable(sub_amount,tax_amount){
    if(!isNaN(tax_amount) && !isNaN(sub_amount) && tax_amount != ""){      
      var tax = (parseFloat(sub_amount) / 100) * parseFloat(tax_amount) ;
      if(!isNaN(tax)){
        $(".tax_amount").html(tax.toFixed(2));
        $(".total_amount").html("$ "+(parseFloat(sub_amount) + parseFloat(tax)).toFixed(2));
      }
    }else{
      if(!isNaN(sub_amount) && sub_amount != ""){
        if(/^[0-9]+$/.test(sub_amount)) {
          $(".total_amount").html("$ "+sub_amount.toFixed(2));
        }else{
          $(".total_amount").html("$ "+sub_amount);
        }
      }
    }
  }


  $("#invoice_image").change(function() {
    readIMG(this);
  });

    
  $( "#previewlogo, #preview_change_logo" ).on( "click", function() {
    $( "#invoice_image" ).trigger( "click" );
  });

  function readIMG(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        $('#invoice_image').hide();
        $('#preview_img').show().attr('src', e.target.result).css("position","absolute");
        $('#preview_change_logo').show();
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  function remove_items(n){
    if (confirm('Are you sure to remove this item?')) {
      n.parents(".fields").remove();
      var total_amount = parseFloat(0.0);
      $(".amount").each(function() {
        if(!isNaN($(this).text()) && $(this).text() != ""){
          total_amount = parseFloat($(this).text()) + total_amount;
        }else{
          total_amount = total_amount
        }
      });
      if(!isNaN(total_amount)){
        $("#sub_total").html(total_amount.toFixed(2));
      }

      var tax_amount = parseFloat($("#invoice_tax").val());
      var total_amount = $("#sub_total").text();
      if(!isNaN(tax_amount) && tax_amount != ""){
        var tax = (parseInt(total_amount) / 100) * parseFloat(tax_amount) ;
        $(".tax_amount").html(tax_amount.toFixed(2));
      }else{
        $(".tax_amount").html("");
      }
      amount_payable(total_amount,tax_amount)
    }else{
      n.parents(".fields").show();
    }
  }

  $("#submit_invoice").click(function( event ) {
    event.stopPropagation();
    var contact_id = $("#invoice_contact_id").val();
    if(contact_id == ""){
      alert("Bill to address is incorrect! Make sure to select address from auto suggest.");
      return false;
    }else{
      return true;
    }
  });

  function validate_form(){
    var validate = 0;
    var bill_to = $.trim($("#bill_to").val());
    var company_name = $.trim($("#invoice_company_name").val());
    var company_address = $.trim($("#invoice_company_address").val());
    var due_date = $.trim($("#invoice_due_date").val());
    var invoice_no = $.trim($("#invoice_invoice_no").val());
    if (bill_to == "") {
      $("#bill_to_error").html('Bill to can not be blank');
      validate = 1;
    }
    if (company_name == "") {
      $("#company_name_error").html('Company name can not be blank');
      validate = 1;
    }
    if (company_address == "") {
      $("#company_address_error").html('Company address can not be blank');
      validate = 1;
    }
    if (due_date == "") {
      $("#due_date_error").html('Due date can not be blank');
      validate = 1;
    }
    if (invoice_no == "") {
      $("#invoice_no_error").html('Invoice number can not be blank');
      validate = 1;
    }
    if ($("#invoice_no_error").is(":visible")) {
      validate = 1;
    }
    if (validate == 1) {
      $("html, body").animate({ scrollTop: 0 }, "slow");
      return false;
    } else {
      return true;
    }
  }
  $('#bill_to').off('keyup').on('keyup',function(){
     $('#bill_to_error').html('');
  });
  $('#invoice_company_name').off('keyup').on('keyup',function(){
     $('#company_name_error').html('');
  });
  $('#invoice_company_address').off('keyup').on('keyup',function(){
     $('#company_address_error').html('');
  });  
  $('#invoice_invoice_no').off('keyup').on('keyup',function(){
     $('#invoice_no_error').html('');
  });

  function onlyfloatnumbers(e,ifield){
    var evalue = ifield.val();
    var regexPattern = /^\d{0,8}(\.\d{1,2})?$/;         
    //Allow only Number as well 0nly 2 digit after dot(.)
    if(regexPattern.test(evalue)) {
      return true;
    } else{
      //ifield.parents(".fields").find("#rate_error").html("Invalid input")
      var float_value = evalue.replace(/[^0-9.]/g, ''); 
      if(float_value.indexOf('.') > -1){
        var output = float_value.split('.');
        output = output.shift() + '.' + output.join('');
      }else{
        var output = float_value;
      }
      ifield.val(output);
      sum_rate(output,ifield);      
      return false;
    }
  }

  function check_uniqueness(invoice_no){
    $.ajax({
      url: '/check_unique_invoice',
      type: 'GET',
      data: {invoice_no: invoice_no},
      success: function(res) {
        if(res==true){
          $("#invoice_no_error").show().html("Invoice number already taken.");
        }else{
          $("#invoice_no_error").hide();
        }
      },
      error: function(res) {
        alert("Something went wrong.");
      }
    }); 
  }

  $('#invoice_invoice_no').keypress(function (e) {
    var unicode = e.charCode ? e.charCode : e.keyCode;

    if (unicode != 8 && unicode != 46) {
        if ((unicode >= 65 && unicode <= 90) || (unicode >= 97 && unicode <= 122) || (unicode >= 48 && unicode <= 57)) {
            return true;
        } else {
            return false;
        }
    } else if(unicode == 46){
      return false;
    }
    else {
        return true;
    }
  });